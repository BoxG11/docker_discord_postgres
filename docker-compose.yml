version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
    #TODO: change passwords
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  
  picker:
    build: ./picker
    volumes:
      - "./picker/:/usr/src/app/"
      - "./global/:/usr/src/app/global/"
    command: ["python", "/usr/src/app/picker.py"]
    networks:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy

  discord:
    build: ./discord
    volumes:
      - "./discord/:/usr/src/app/"
      - "./global/:/usr/src/app/global/"
    command: ["python", "/usr/src/app/listener.py"]
    networks:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    volumes:
      - "./globals/prometheus.yml:/etc/prometheus/prometheus.yml"


    #command: [ "sed", "-i", "'s/$/replace_string/'", "filename" ]

    ports:
      - "9090:9090"

    network_mode: host

    restart: unless-stopped


networks:
  postgres:
    driver: bridge

volumes:
    postgres: