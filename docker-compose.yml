version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  discord:
    build: ./discord
    volumes:
      - "./discord/:/usr/src/app"
    command: ["python", "/usr/src/app/bot.py"]
    networks:
      - postgres
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./secrets.py:/etc/prometheus/secrets.py
      - ./secrets.py:/usr/src/app/secrets.py

    #command: [ "sed", "-i", "'s/$/replace_string/'", "filename" ]

    ports:
      - "9090:9090"

    network_mode: host

    restart: unless-stopped


  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'



networks:
  postgres:
    driver: bridge

volumes:
    postgres: