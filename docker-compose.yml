version: "3.1"

services:
  discord:
    build: ./discord
    volumes:
      - "./discord/:/usr/src/app/"
      - "./global/db.py:/usr/src/app/db.py"
      - "./global/secrets.py:/usr/src/app/secrets.py"
    command: ["python", "/usr/src/app/listener.py"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      
  worker:
    image: worker
    build:
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
    ports:
      - 5673:5672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=amqp://myuser:mypassword@rabbitmq
      - FLOWER_PORT=8888
    ports:
      - 8889:8888
    depends_on:
      - rabbitmq

  # pgadmin:

      
  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    volumes:
      - "./global/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    network_mode: host
    restart: unless-stopped

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - "./global/init.sql:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - "5432:5432"
    restart: unless-stopped
    command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  default:
    driver: bridge

volumes:
    postgres:
    pgadmin:
